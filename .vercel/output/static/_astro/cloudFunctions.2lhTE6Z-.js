const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["_astro/CreditContext.Cd34fGmH.js","_astro/index.D5cfIYOg.js"])))=>i.map(i=>d[i]);
import{_ as g}from"./CreditContext.Cd34fGmH.js";class u extends Error{code;details;requestId;constructor(s,t,e,r){super(t),this.name="CloudFunctionsError",this.code=s,this.details=e,this.requestId=r}isUsageLimitError(){return this.code==="USAGE_LIMIT_EXCEEDED"||this.code==="TRIAL_LIMIT_EXCEEDED"||this.code==="MONTHLY_LIMIT_EXCEEDED"}isAuthError(){return this.code==="AUTHENTICATION_REQUIRED"||this.code==="INVALID_TOKEN"||this.code==="SESSION_EXPIRED"}getUserFriendlyMessage(){switch(this.code){case"USAGE_LIMIT_EXCEEDED":case"TRIAL_LIMIT_EXCEEDED":return"Free trial exhausted, sign up to get 200 credits for audio analysis";case"MONTHLY_LIMIT_EXCEEDED":return"Monthly analyses exhausted, will reset next month";case"AUTHENTICATION_REQUIRED":return"Please login to continue";case"INVALID_TOKEN":case"SESSION_EXPIRED":return"Login expired, please login again";case"NETWORK_ERROR":return"Network connection failed, please check your network and try again";case"TIMEOUT":return"Request timeout, please try again";default:return this.message||"Analysis failed, please try again"}}}class E{baseUrl;timeout;constructor(s,t=3e5){this.baseUrl=s||"https://us-central1-describe-music.cloudfunctions.net",this.timeout=t,this.baseUrl}async getAuthHeaders(){const s={};try{const{DeviceFingerprint:t}=await g(async()=>{const{DeviceFingerprint:i}=await import("./CreditContext.Cd34fGmH.js").then(a=>a.f);return{DeviceFingerprint:i}},__vite__mapDeps([0,1])),e=await t.generate();s["X-Device-Fingerprint"]=e;const{supabase:r}=await g(async()=>{const{supabase:i}=await import("./CreditContext.Cd34fGmH.js").then(a=>a.e);return{supabase:i}},__vite__mapDeps([0,1])),{data:{session:n},error:o}=await r.auth.getSession();if(o)return s;if(n?.user){s["X-User-ID"]=n.user.id;const i=Math.floor(Date.now()/1e3);if((n.expires_at||0)>i+60)s.Authorization=`Bearer ${n.access_token}`;else{const{data:l,error:c}=await r.auth.refreshSession();c?s.Authorization=`Bearer ${n.access_token}`:l.session&&(s.Authorization=`Bearer ${l.session.access_token}`,s["X-User-ID"]=l.session.user.id)}}}catch{}return s}handleAuthError(s){s.isUsageLimitError()?window.dispatchEvent(new CustomEvent("usageLimitExceeded",{detail:{error:s,message:s.getUserFriendlyMessage()}})):s.isAuthError()&&window.dispatchEvent(new CustomEvent("authenticationRequired",{detail:{error:s,message:s.getUserFriendlyMessage()}}))}async generateUploadUrl(s,t){const e=await this.makeRequest("/generateUploadUrl",{method:"POST",body:JSON.stringify({fileName:s,contentType:t}),headers:{"Content-Type":"application/json"}});if(!e.success||!e.data)throw new u(e.error?.code||"UNKNOWN_ERROR",e.error?.message||"Failed to generate upload URL",e.error?.details,e.requestId);return e.data}async uploadToGCS(s,t,e){return new Promise((r,n)=>{const o=new XMLHttpRequest;o.upload.addEventListener("progress",i=>{if(i.lengthComputable&&e){const a=i.loaded/i.total*100,l=Math.round(a*.3);e({phase:"uploading",percentage:l,message:`Uploading file... ${Math.round(a)}%`})}}),o.addEventListener("load",()=>{o.status>=200&&o.status<300?(e&&e({phase:"uploading",percentage:30,message:"Upload completed"}),r()):n(new u("GCS_UPLOAD_ERROR",`Upload failed with status ${o.status}`,{status:o.status,statusText:o.statusText}))}),o.addEventListener("error",()=>{n(new u("GCS_UPLOAD_ERROR","Upload failed due to network error"))}),o.open("PUT",t),o.setRequestHeader("Content-Type",s.type||"audio/mpeg"),o.send(s)})}async analyzeAudioFromGCS(s,t,e={}){const r=await this.makeRequest("/analyzeAudioFromUrl",{method:"POST",body:JSON.stringify({fileUrl:s,fileName:t,options:e}),headers:{"Content-Type":"application/json"}});if(!r.success||!r.data)throw new u(r.error?.code||"UNKNOWN_ERROR",r.error?.message||"Analysis failed",r.error?.details,r.requestId);return r.data}async analyzeAudio(s,t={}){try{const{onProgress:e}=t;e&&e({phase:"uploading",percentage:0,message:"Preparing upload..."});const r=await this.generateUploadUrl(s.name,s.type);await this.uploadToGCS(s,r.uploadUrl,e),e&&e({phase:"analyzing",percentage:30,message:"Starting analysis..."});const n=this.analyzeAudioFromGCS(r.downloadUrl,r.originalName,t);e&&this.simulateAnalysisProgress(e);const o=await n;return e&&e({phase:"analyzing",percentage:100,message:"Analysis completed!"}),o}catch(e){throw console.error("Audio analysis failed:",e),e instanceof u&&this.handleAuthError(e),e}}simulateAnalysisProgress(s){const t=[{percentage:40,message:"Processing audio data..."},{percentage:50,message:"Extracting features..."},{percentage:65,message:"Analyzing patterns..."},{percentage:80,message:"Generating insights..."},{percentage:95,message:"Finalizing results..."}];let e=0;const r=()=>{if(e<t.length){const n=t[e];s({phase:"analyzing",percentage:n.percentage,message:n.message}),e++,setTimeout(r,800+Math.random()*400)}};setTimeout(r,500)}async healthCheck(){return await this.makeRequest("/healthCheck",{method:"GET"})}async getVersion(){return await this.makeRequest("/version",{method:"GET"})}async makeRequest(s,t,e=0){const r=`${this.baseUrl}${s}`,n=new AbortController,o=setTimeout(()=>n.abort(),this.timeout),i=await this.getAuthHeaders();try{const a=await fetch(r,{...t,signal:n.signal,headers:{Accept:"application/json",...t.body instanceof FormData?{}:{"Content-Type":"application/json"},...i,...t.headers}});if(clearTimeout(o),!a.ok){const c=await a.json().catch(()=>({}));let p=c.error?.code||"HTTP_ERROR",h=c.error?.message||`HTTP ${a.status}: ${a.statusText}`;throw a.status===429?(p="USAGE_LIMIT_EXCEEDED",h=h||"Usage limit reached"):a.status===401?(p="AUTHENTICATION_REQUIRED",h=h||"Authentication required"):a.status===403&&(p="ACCESS_DENIED",h=h||"Access denied"),new u(p,h,c.error?.details||{status:a.status,statusText:a.statusText},c.requestId)}return await a.json()}catch(a){if(clearTimeout(o),a.name==="AbortError")throw new u("TIMEOUT",`Request timeout after ${this.timeout}ms`);if(a instanceof u){if(a.isAuthError()&&e<1)try{const{supabase:l}=await g(async()=>{const{supabase:c}=await import("./CreditContext.Cd34fGmH.js").then(p=>p.e);return{supabase:c}},__vite__mapDeps([0,1]));return await l.auth.refreshSession(),this.makeRequest(s,t,e+1)}catch(l){console.error("Failed to refresh session:",l)}throw a}throw new u("NETWORK_ERROR",`Network error: ${a.message}`,{originalError:a.message})}}}const f=new E;function y(d){if(!["audio/mpeg","audio/mp3","audio/wav","audio/m4a","audio/aac","audio/ogg","audio/webm","audio/flac"].includes(d.type))return{valid:!1,error:`Unsupported file type: ${d.type}. Supported formats: MP3, WAV, M4A, AAC, OGG, WebM, FLAC`};const t=50*1024*1024;return d.size>t?{valid:!1,error:`File size ${(d.size/(1024*1024)).toFixed(2)}MB exceeds 50MB limit`}:d.size===0?{valid:!1,error:"File is empty"}:{valid:!0}}export{f as c,y as v};
