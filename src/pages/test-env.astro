---
// 简单的环境变量测试页面
const envVars = {
  VITE_LEMONSQUEEZY_API_KEY: import.meta.env.VITE_LEMONSQUEEZY_API_KEY,
  VITE_LEMONSQUEEZY_STORE_ID: import.meta.env.VITE_LEMONSQUEEZY_STORE_ID,
  VITE_LEMONSQUEEZY_BASIC_VARIANT_ID: import.meta.env
    .VITE_LEMONSQUEEZY_BASIC_VARIANT_ID,
  VITE_LEMONSQUEEZY_PRO_VARIANT_ID: import.meta.env
    .VITE_LEMONSQUEEZY_PRO_VARIANT_ID,
  VITE_LEMONSQUEEZY_PREMIUM_VARIANT_ID: import.meta.env
    .VITE_LEMONSQUEEZY_PREMIUM_VARIANT_ID,
};

// 检查配置状态
const configStatus = {
  hasApiKey: !!envVars.VITE_LEMONSQUEEZY_API_KEY,
  hasStoreId: !!envVars.VITE_LEMONSQUEEZY_STORE_ID,
  hasBasicVariant: !!envVars.VITE_LEMONSQUEEZY_BASIC_VARIANT_ID,
  hasProVariant: !!envVars.VITE_LEMONSQUEEZY_PRO_VARIANT_ID,
  hasPremiumVariant: !!envVars.VITE_LEMONSQUEEZY_PREMIUM_VARIANT_ID,
};

const allConfigured = Object.values(configStatus).every(Boolean);
---

<html lang="zh">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <title>环境变量测试</title>
    <style>
      body {
        font-family: system-ui, sans-serif;
        max-width: 800px;
        margin: 0 auto;
        padding: 2rem;
        line-height: 1.6;
      }
      .status {
        padding: 1rem;
        border-radius: 8px;
        margin: 1rem 0;
      }
      .success {
        background: #d4edda;
        border: 1px solid #c3e6cb;
        color: #155724;
      }
      .error {
        background: #f8d7da;
        border: 1px solid #f5c6cb;
        color: #721c24;
      }
      .warning {
        background: #fff3cd;
        border: 1px solid #ffeaa7;
        color: #856404;
      }
      table {
        width: 100%;
        border-collapse: collapse;
        margin: 1rem 0;
      }
      th,
      td {
        border: 1px solid #ddd;
        padding: 8px;
        text-align: left;
      }
      th {
        background-color: #f2f2f2;
      }
      .truncate {
        max-width: 200px;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
      }
      .code {
        background: #f4f4f4;
        padding: 0.2rem 0.4rem;
        border-radius: 4px;
        font-family: monospace;
      }
    </style>
  </head>
  <body>
    <h1>🔍 环境变量测试页面</h1>

    <div class={`status ${allConfigured ? "success" : "error"}`}>
      <h2>
        {allConfigured ? "✅ 配置状态：正常" : "❌ 配置状态：有问题"}
      </h2>
      <p>
        {
          allConfigured
            ? "所有必需的环境变量都已正确配置。"
            : "部分环境变量缺失或未正确配置。"
        }
      </p>
    </div>

    <h2>📋 环境变量详情</h2>
    <table>
      <thead>
        <tr>
          <th>变量名</th>
          <th>状态</th>
          <th>值（截断）</th>
        </tr>
      </thead>
      <tbody>
        {
          Object.entries(envVars).map(([key, value]) => (
            <tr>
              <td class="code">{key}</td>
              <td>{value ? "✅ 已设置" : "❌ 未设置"}</td>
              <td class="truncate">
                {value
                  ? typeof value === "string" && value.length > 50
                    ? value.substring(0, 50) + "..."
                    : value
                  : "(空)"}
              </td>
            </tr>
          ))
        }
      </tbody>
    </table>

    <h2>🔧 配置检查</h2>
    <table>
      <thead>
        <tr>
          <th>检查项</th>
          <th>状态</th>
          <th>说明</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td>API Key</td>
          <td>{configStatus.hasApiKey ? "✅" : "❌"}</td>
          <td>
            {configStatus.hasApiKey ? "已配置" : "缺少 API Key"}
          </td>
        </tr>
        <tr>
          <td>Store ID</td>
          <td>{configStatus.hasStoreId ? "✅" : "❌"}</td>
          <td>
            {configStatus.hasStoreId ? "已配置" : "缺少 Store ID"}
          </td>
        </tr>
        <tr>
          <td>Basic Variant</td>
          <td>{configStatus.hasBasicVariant ? "✅" : "❌"}</td>
          <td>
            {configStatus.hasBasicVariant ? "已配置" : "缺少基础套餐变体 ID"}
          </td>
        </tr>
        <tr>
          <td>Pro Variant</td>
          <td>{configStatus.hasProVariant ? "✅" : "❌"}</td>
          <td>
            {configStatus.hasProVariant ? "已配置" : "缺少专业套餐变体 ID"}
          </td>
        </tr>
        <tr>
          <td>Premium Variant</td>
          <td>{configStatus.hasPremiumVariant ? "✅" : "❌"}</td>
          <td>
            {configStatus.hasPremiumVariant ? "已配置" : "缺少高级套餐变体 ID"}
          </td>
        </tr>
      </tbody>
    </table>

    {
      !allConfigured && (
        <div class="status warning">
          <h3>⚠️ 修复建议</h3>
          <ol>
            <li>
              检查 <code>.env</code> 文件中的环境变量设置
            </li>
            <li>
              确保所有变量都以 <code>VITE_</code> 开头
            </li>
            <li>重启开发服务器以加载新的环境变量</li>
            <li>
              检查 <code>astro.config.mjs</code> 中的 Vite 配置
            </li>
          </ol>
        </div>
      )
    }

    <h2>🧪 测试操作</h2>
    <div class="status">
      <p>如果配置正确，你可以：</p>
      <ul>
        <li>
          <a href="/pricing">访问定价页面</a> 测试支付流程
        </li>
        <li>
          <a href="/analyze">访问分析页面</a> 测试功能
        </li>
        <li>在浏览器控制台运行 JavaScript 测试</li>
      </ul>
    </div>

    <script>
      // 客户端环境变量测试
      console.log("🔍 客户端环境变量测试:");
      console.log(
        "VITE_LEMONSQUEEZY_API_KEY:",
        import.meta.env.VITE_LEMONSQUEEZY_API_KEY ? "已设置" : "未设置",
      );
      console.log(
        "VITE_LEMONSQUEEZY_STORE_ID:",
        import.meta.env.VITE_LEMONSQUEEZY_STORE_ID,
      );
      console.log("所有环境变量:", import.meta.env);

      // 测试配置加载
      window.testLemonsqueezyConfig = function () {
        console.log("🧪 测试 Lemonsqueezy 配置:");

        const config = {
          apiKey: import.meta.env.VITE_LEMONSQUEEZY_API_KEY,
          storeId: import.meta.env.VITE_LEMONSQUEEZY_STORE_ID,
          basicVariant: import.meta.env.VITE_LEMONSQUEEZY_BASIC_VARIANT_ID,
          proVariant: import.meta.env.VITE_LEMONSQUEEZY_PRO_VARIANT_ID,
          premiumVariant: import.meta.env.VITE_LEMONSQUEEZY_PREMIUM_VARIANT_ID,
        };

        console.table(config);

        const isConfigured = Object.values(config).every((value) => !!value);
        console.log(isConfigured ? "✅ 配置完整" : "❌ 配置不完整");

        return config;
      };

      console.log("💡 运行 testLemonsqueezyConfig() 来测试配置");
    </script>
  </body>
</html>
