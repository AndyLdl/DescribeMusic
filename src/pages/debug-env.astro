---
// 调试环境变量页面
import {
  ENV,
  debugEnv,
  isLemonsqueezyConfigured,
} from "../config/lemonsqueezy";

// 调用调试函数
debugEnv();

const configStatus = isLemonsqueezyConfigured();
const envStatus = {
  hasApiKey: !!ENV.LEMONSQUEEZY_API_KEY,
  hasStoreId: !!ENV.LEMONSQUEEZY_STORE_ID,
  apiKeyLength: ENV.LEMONSQUEEZY_API_KEY?.length || 0,
  storeId: ENV.LEMONSQUEEZY_STORE_ID,
  basicVariant: ENV.LEMONSQUEEZY_BASIC_VARIANT_ID,
  proVariant: ENV.LEMONSQUEEZY_PRO_VARIANT_ID,
  premiumVariant: ENV.LEMONSQUEEZY_PREMIUM_VARIANT_ID,
};

// 检查原始环境变量
const rawEnv = {
  VITE_LEMONSQUEEZY_API_KEY: import.meta.env.VITE_LEMONSQUEEZY_API_KEY,
  VITE_LEMONSQUEEZY_STORE_ID: import.meta.env.VITE_LEMONSQUEEZY_STORE_ID,
  VITE_LEMONSQUEEZY_BASIC_VARIANT_ID: import.meta.env
    .VITE_LEMONSQUEEZY_BASIC_VARIANT_ID,
  VITE_LEMONSQUEEZY_PRO_VARIANT_ID: import.meta.env
    .VITE_LEMONSQUEEZY_PRO_VARIANT_ID,
  VITE_LEMONSQUEEZY_PREMIUM_VARIANT_ID: import.meta.env
    .VITE_LEMONSQUEEZY_PREMIUM_VARIANT_ID,
};
---

<html lang="zh">
  <head>
    <meta charset="utf-8" />
    <title>环境变量调试</title>
    <style>
      body {
        font-family: monospace;
        padding: 20px;
        background: #1a1a1a;
        color: #fff;
        line-height: 1.6;
      }
      .status {
        padding: 10px;
        margin: 10px 0;
        border-radius: 5px;
      }
      .success {
        background: #0f5132;
      }
      .error {
        background: #842029;
      }
      .warning {
        background: #664d03;
      }
      pre {
        background: #2a2a2a;
        padding: 15px;
        border-radius: 5px;
        overflow-x: auto;
        white-space: pre-wrap;
      }
      .section {
        margin: 20px 0;
        padding: 15px;
        border: 1px solid #444;
        border-radius: 8px;
      }
    </style>
  </head>
  <body>
    <h1>🔍 环境变量调试页面</h1>

    <div class={`status ${configStatus ? "success" : "error"}`}>
      <h2>配置状态: {configStatus ? "✅ 正常" : "❌ 异常"}</h2>
    </div>

    <div class="section">
      <h3>📋 处理后的环境变量 (ENV)</h3>
      <pre>{JSON.stringify(envStatus, null, 2)}</pre>
    </div>

    <div class="section">
      <h3>🔧 原始环境变量 (import.meta.env)</h3>
      <pre>{JSON.stringify(rawEnv, null, 2)}</pre>
    </div>

    <div class="section">
      <h3>🌍 所有环境变量</h3>
      <pre>{JSON.stringify(import.meta.env, null, 2)}</pre>
    </div>

    <div class="section">
      <h3>🧪 测试结果</h3>
      <ul>
        <li>API Key 存在: {envStatus.hasApiKey ? "✅" : "❌"}</li>
        <li>API Key 长度: {envStatus.apiKeyLength}</li>
        <li>Store ID 存在: {envStatus.hasStoreId ? "✅" : "❌"}</li>
        <li>Store ID 值: {envStatus.storeId}</li>
        <li>Basic Variant: {envStatus.basicVariant || "❌ 未设置"}</li>
        <li>Pro Variant: {envStatus.proVariant || "❌ 未设置"}</li>
        <li>Premium Variant: {envStatus.premiumVariant || "❌ 未设置"}</li>
      </ul>
    </div>

    <script>
      console.log("🔍 客户端调试信息:");
      console.log("配置状态:", { configStatus });
      console.log("ENV 对象:", { envStatus });
      console.log("原始环境变量:", { rawEnv });
      console.log("所有环境变量:", import.meta.env);

      // 测试配置函数
      import("../config/lemonsqueezy.js")
        .then((module) => {
          console.log("🧪 配置模块测试:");
          console.log("ENV:", module.ENV);
          console.log(
            "isLemonsqueezyConfigured():",
            module.isLemonsqueezyConfigured(),
          );

          // 手动测试配置检查
          const hasApiKey = !!module.ENV.LEMONSQUEEZY_API_KEY;
          const hasStoreId = !!module.ENV.LEMONSQUEEZY_STORE_ID;
          console.log("手动检查 - API Key:", hasApiKey);
          console.log("手动检查 - Store ID:", hasStoreId);
          console.log("手动检查 - 配置完整:", hasApiKey && hasStoreId);
        })
        .catch((err) => {
          console.error("配置模块加载失败:", err);
        });
    </script>
  </body>
</html>
