---
// 最简单的环境变量测试
const apiKey = import.meta.env.VITE_LEMONSQUEEZY_API_KEY;
const storeId = import.meta.env.VITE_LEMONSQUEEZY_STORE_ID;
const basicVariant = import.meta.env.VITE_LEMONSQUEEZY_BASIC_VARIANT_ID;

console.log("🔍 服务端环境变量检查:", {
  apiKey: apiKey
    ? `${apiKey.substring(0, 20)}... (${apiKey.length} 字符)`
    : "未设置",
  storeId: storeId || "未设置",
  basicVariant: basicVariant || "未设置",
  allEnv: import.meta.env,
});
---

<html lang="zh">
  <head>
    <meta charset="utf-8" />
    <title>简单环境变量测试</title>
    <style>
      body {
        font-family: monospace;
        padding: 20px;
        background: #1a1a1a;
        color: #fff;
      }
      .status {
        padding: 15px;
        margin: 10px 0;
        border-radius: 8px;
        border: 1px solid;
      }
      .success {
        background: #0f5132;
        border-color: #198754;
      }
      .error {
        background: #842029;
        border-color: #dc3545;
      }
      pre {
        background: #2a2a2a;
        padding: 15px;
        border-radius: 5px;
        overflow-x: auto;
        white-space: pre-wrap;
      }
    </style>
  </head>
  <body>
    <h1>🔍 简单环境变量测试</h1>

    <div class={`status ${apiKey && storeId ? "success" : "error"}`}>
      <h2>服务端检查结果: {apiKey && storeId ? "✅ 正常" : "❌ 异常"}</h2>
      <ul>
        <li>
          API Key: {apiKey ? `✅ 已设置 (${apiKey.length} 字符)` : "❌ 未设置"}
        </li>
        <li>Store ID: {storeId ? `✅ ${storeId}` : "❌ 未设置"}</li>
        <li>
          Basic Variant: {basicVariant ? `✅ ${basicVariant}` : "❌ 未设置"}
        </li>
      </ul>
    </div>

    <h3>📋 服务端环境变量 (Astro 构建时)</h3>
    <pre>{JSON.stringify({
        VITE_LEMONSQUEEZY_API_KEY: apiKey ? `${apiKey.substring(0, 30)}... (${apiKey.length} 字符)` : null,
        VITE_LEMONSQUEEZY_STORE_ID: storeId,
        VITE_LEMONSQUEEZY_BASIC_VARIANT_ID: basicVariant,
        VITE_LEMONSQUEEZY_PRO_VARIANT_ID: import.meta.env.VITE_LEMONSQUEEZY_PRO_VARIANT_ID,
        VITE_LEMONSQUEEZY_PREMIUM_VARIANT_ID: import.meta.env.VITE_LEMONSQUEEZY_PREMIUM_VARIANT_ID,
    }, null, 2)}</pre>

    <div id="client-result"></div>

    <script>
      console.log("🔍 客户端环境变量检查开始");

      // 客户端环境变量检查
      const clientEnv = {
        VITE_LEMONSQUEEZY_API_KEY: import.meta.env.VITE_LEMONSQUEEZY_API_KEY,
        VITE_LEMONSQUEEZY_STORE_ID: import.meta.env.VITE_LEMONSQUEEZY_STORE_ID,
        VITE_LEMONSQUEEZY_BASIC_VARIANT_ID: import.meta.env
          .VITE_LEMONSQUEEZY_BASIC_VARIANT_ID,
        VITE_LEMONSQUEEZY_PRO_VARIANT_ID: import.meta.env
          .VITE_LEMONSQUEEZY_PRO_VARIANT_ID,
        VITE_LEMONSQUEEZY_PREMIUM_VARIANT_ID: import.meta.env
          .VITE_LEMONSQUEEZY_PREMIUM_VARIANT_ID,
      };

      console.log("客户端环境变量:", clientEnv);
      console.log("所有环境变量:", import.meta.env);

      const hasApiKey = !!clientEnv.VITE_LEMONSQUEEZY_API_KEY;
      const hasStoreId = !!clientEnv.VITE_LEMONSQUEEZY_STORE_ID;
      const isConfigured = hasApiKey && hasStoreId;

      // 显示客户端结果
      const resultDiv = document.getElementById("client-result");
      resultDiv.innerHTML = `
            <div class="status ${isConfigured ? "success" : "error"}">
                <h2>客户端检查结果: ${isConfigured ? "✅ 正常" : "❌ 异常"}</h2>
                <ul>
                    <li>API Key: ${hasApiKey ? `✅ 已设置 (${clientEnv.VITE_LEMONSQUEEZY_API_KEY.length} 字符)` : "❌ 未设置"}</li>
                    <li>Store ID: ${hasStoreId ? `✅ ${clientEnv.VITE_LEMONSQUEEZY_STORE_ID}` : "❌ 未设置"}</li>
                    <li>Basic Variant: ${clientEnv.VITE_LEMONSQUEEZY_BASIC_VARIANT_ID ? `✅ ${clientEnv.VITE_LEMONSQUEEZY_BASIC_VARIANT_ID}` : "❌ 未设置"}</li>
                </ul>
            </div>
            
            <h3>📋 客户端环境变量 (浏览器运行时)</h3>
            <pre>${JSON.stringify(clientEnv, null, 2)}</pre>
            
            <h3>🌍 所有客户端环境变量</h3>
            <pre style="max-height: 300px; overflow-y: auto;">${JSON.stringify(import.meta.env, null, 2)}</pre>
        `;

      // 测试配置函数
      console.log("🧪 测试配置函数:");

      // 模拟 isLemonsqueezyConfigured 函数
      const ENV = {
        LEMONSQUEEZY_API_KEY: clientEnv.VITE_LEMONSQUEEZY_API_KEY || "",
        LEMONSQUEEZY_STORE_ID: clientEnv.VITE_LEMONSQUEEZY_STORE_ID || "",
      };

      const isLemonsqueezyConfigured = !!(
        ENV.LEMONSQUEEZY_API_KEY && ENV.LEMONSQUEEZY_STORE_ID
      );

      console.log("ENV 对象:", ENV);
      console.log("isLemonsqueezyConfigured():", isLemonsqueezyConfigured);

      if (!isLemonsqueezyConfigured) {
        console.error("❌ Lemonsqueezy 配置不完整");
        if (!ENV.LEMONSQUEEZY_API_KEY) {
          console.error("  - 缺少 API Key");
        }
        if (!ENV.LEMONSQUEEZY_STORE_ID) {
          console.error("  - 缺少 Store ID");
        }
      } else {
        console.log("✅ Lemonsqueezy 配置完整");
      }
    </script>
  </body>
</html>
