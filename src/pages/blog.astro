---
import { getCollection } from "astro:content";
import Layout from "@/layouts/Layout.astro";
import Container from "@/components/container.astro";
import Sectionhead from "@/components/sectionhead.astro";

// Filter blog entries with 'draft: false' & date before current date
const publishedBlogEntries = await getCollection("blog", ({ data }) => {
  return !data.draft && data.publishDate < new Date();
});

// Sort content entries by publication date
publishedBlogEntries.sort(function (a, b) {
  return b.data.publishDate.valueOf() - a.data.publishDate.valueOf();
});
---

<Layout
  title="Blog - AI Audio Analysis Insights & Tutorials | Describe Music"
  description="Discover expert insights on AI audio analysis, music technology, developer tutorials, and industry trends. Learn how to leverage audio AI for content creation, SEO, and accessibility.">
  <Container>
    <Sectionhead>
      <Fragment slot="title">Audio AI Insights & Tutorials</Fragment>
      <Fragment slot="desc">
        Expert insights on AI audio analysis, developer guides, and industry
        trends to help you master audio technology.
      </Fragment>
    </Sectionhead>
    <main class="mt-16">
      <ul class="grid gap-16 max-w-4xl mx-auto">
        {
          publishedBlogEntries.map((blogPostEntry, index) => (
            <li>
              <article class="group bg-slate-800/30 rounded-xl border border-slate-700 hover:border-violet-500/50 transition-all duration-300 overflow-hidden hover:shadow-lg hover:shadow-violet-500/10">
                <a href={`/blog/${blogPostEntry.slug}`} class="block">
                  <div class="grid md:grid-cols-2 gap-0">
                    <div class="relative overflow-hidden bg-gradient-to-br from-slate-700 to-slate-800 min-h-[250px] flex items-center justify-center">
                      {blogPostEntry.data.image?.src ? (
                        <img
                          src={blogPostEntry.data.image.src}
                          alt={blogPostEntry.data.image.alt}
                          width={400}
                          height={300}
                          loading={index <= 2 ? "eager" : "lazy"}
                          decoding={index <= 2 ? "sync" : "async"}
                          class="w-full h-full min-h-[250px] object-cover object-center group-hover:scale-105 transition-transform duration-300"
                        />
                      ) : (
                        <div class="flex flex-col items-center justify-center text-slate-400 p-8">
                          <svg
                            class="w-16 h-16 mb-4"
                            fill="none"
                            stroke="currentColor"
                            viewBox="0 0 24 24">
                            <path
                              stroke-linecap="round"
                              stroke-linejoin="round"
                              stroke-width="1.5"
                              d="M9 19V6l12-3v13M9 19c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zm12-3c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zM9 10l12-3"
                            />
                          </svg>
                          <span class="text-sm text-center">
                            {blogPostEntry.data.category}
                          </span>
                        </div>
                      )}
                      <div class="absolute inset-0 bg-gradient-to-t from-slate-900/50 to-transparent" />
                    </div>
                    <div class="p-8">
                      <span class="inline-block px-3 py-1 text-xs font-medium tracking-wider uppercase bg-violet-500/20 text-violet-300 rounded-full">
                        {blogPostEntry.data.category}
                      </span>

                      <h2 class="text-2xl font-bold leading-tight tracking-tight mt-4 text-white group-hover:text-violet-200 transition-colors">
                        {blogPostEntry.data.title}
                      </h2>

                      <p class="text-slate-200 mt-3 leading-relaxed line-clamp-3">
                        {blogPostEntry.data.snippet}
                      </p>

                      <div class="flex items-center gap-2 mt-6 text-sm">
                        <span class="text-slate-300">
                          {blogPostEntry.data.author}
                        </span>
                        <span class="text-slate-500">â€¢</span>
                        <time
                          class="text-slate-300"
                          datetime={blogPostEntry.data.publishDate.toISOString()}>
                          {new Intl.DateTimeFormat("en-US", {
                            year: "numeric",
                            month: "long",
                            day: "numeric",
                          }).format(blogPostEntry.data.publishDate)}
                        </time>
                      </div>

                      <div class="flex flex-wrap gap-2 mt-4">
                        {blogPostEntry.data.tags.map((tag) => (
                          <span class="text-xs text-slate-400 bg-slate-700/70 px-2 py-1 rounded">
                            #{tag}
                          </span>
                        ))}
                      </div>
                    </div>
                  </div>
                </a>
              </article>
            </li>
          ))
        }
      </ul>
    </main>
  </Container>
</Layout>
